{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","SortDefault","sortFilter","setSortFilter","isReverseFilter","setIsReverseFilter","visibleGoods","goods","prepareGoods","sort","good1","good2","SortAlphabet","localeCompare","SortLength","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,eAAAA,E,mBAAAA,E,qBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAoCC,mBAASH,EAASI,aAAtD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8CH,oBAAS,GAAvD,mBAAOI,EAAP,KAAwBC,EAAxB,KAEMC,EAhCR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,WAAYE,EACd,EADcA,gBAERI,EAAY,YAAOD,GAqBzB,OAnBIL,GACFM,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAML,EAASe,aACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAMd,EAASiB,WACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAaQ,UAGRR,EAOcS,CACnBnB,EACA,CAAEI,aAAYE,oBAQhB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAeL,EAASe,eAEtCS,QAAS,kBAAMlB,EAAcN,EAASe,eALxC,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAeL,EAASiB,aAEtCO,QAAS,kBAAMlB,EAAcN,EAASiB,aALxC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAahB,IAEfiB,QAAS,kBAAMhB,GAAoBD,IALrC,sBAUEF,GAAcE,IACd,wBACEe,KAAK,SACLD,UAAU,4BACVG,QA1CU,WAClBlB,EAAcN,EAASI,aACvBI,GAAmB,IAqCb,sBAWJ,6BACIC,EAAagB,KAAI,SAAAC,GAAI,OACrB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCnHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4305c6a9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  SortDefault = '',\n  SortAlphabet = 'abc',\n  SortLength = 'length',\n}\n\ninterface FilterParam {\n  sortFilter: SortType;\n  isReverseFilter: boolean;\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortFilter, isReverseFilter } : FilterParam,\n) {\n  const prepareGoods = [...goods];\n\n  if (sortFilter) {\n    prepareGoods.sort((good1, good2) => {\n      switch (sortFilter) {\n        case (SortType.SortAlphabet):\n          return good1.localeCompare(good2);\n\n        case (SortType.SortLength):\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverseFilter) {\n    prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortFilter, setSortFilter] = useState(SortType.SortDefault);\n  const [isReverseFilter, setIsReverseFilter] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortFilter, isReverseFilter },\n  );\n\n  const resetFilter = () => {\n    setSortFilter(SortType.SortDefault);\n    setIsReverseFilter(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortFilter !== SortType.SortAlphabet,\n          })}\n          onClick={() => setSortFilter(SortType.SortAlphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortFilter !== SortType.SortLength,\n          })}\n          onClick={() => setSortFilter(SortType.SortLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReverseFilter,\n          })}\n          onClick={() => setIsReverseFilter(!isReverseFilter)}\n        >\n          Reverse\n        </button>\n\n        {(sortFilter || isReverseFilter) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetFilter}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        { visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}